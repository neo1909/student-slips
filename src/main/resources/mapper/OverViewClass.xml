<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OverViewClassDao">

    <select id="searchAllClass" parameterType="com.studentslips.entities.SchoolAndClassSearch" resultMap="resultAllClass">
        select  X3.student_id,X3.name   ,sum(X3.debit) as debit, sum(X3.claims) as claims, sum(X3.balance) as balance
        FROM (
            select  X1.student_id,s.name   ,X1.debit, X2.claims, (X1.debit - IFNULL(X2.claims,0)) as balance
            from (  select sd.student_id,sd.school_id,sd.service_id,sum(sd.amount_debt) as debit,'' as claims,sd.reference_no
            from    PS_Students_Debts sd
            where 1=1
            <if test="schoolId!=0 ">
                and sd.school_id = #{schoolId}
            </if>

            <if test="serviceListId !=null and !serviceListId.isEmpty()">
                <foreach item="item" index="index" collection="serviceListId" open="and sd.service_id in (" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            and sd.del_yn='N'
            and sd.debit_date between #{fromDate} and  #{toDate}
            group by sd.student_id,sd.school_id,sd.reference_no
            ) X1
            Left outer join (
            select '' as student_id,bs.school_id,'' as service_id,'' as debit,sum(bs.claims) as claims,bs.reference_no
            from PS_Bank_Statement bs
            where 1=1
            <if test="schoolId!=0 ">
                and bs.school_id = #{schoolId}
            </if>
            and bs.bank_statement_date between #{fromDate} and  #{toDate}
            and bs.del_yn='N'
            and bs.post_payment_yn='Y'
            group by bs.school_id,bs.reference_no
            ) X2
            on X1.reference_no = X2.reference_no and X1.school_id = X2.school_id
            left outer join PS_Students s
            on s.student_id = X1.student_id
            <if test="schoolId!=0 ">
                and s.school_id = #{schoolId}
            </if>
            where  1=1
            <if test="sClass !=0 ">
                AND    s.class= #{sClass}
            </if>
            <if test="grade !=0 ">
                AND   s.grade = #{grade}
            </if>
        ) X3
        group by X3.student_id,X3.name
    </select>

    <select id="searchDetailClass" parameterType="com.studentslips.entities.SchoolAndClassSearch" resultMap="resultDetailClass">
        SELECT		X1.student_id,(select s.name from PS_Students s where X1.student_id = s.student_id and s.school_id = #{schoolId} ) as name_student,X1.service_id,(select sr.name from PS_Service sr where X1.service_id = sr.service_id and  sr.school_id = #{schoolId}) as name_service,X1.debit,X2.claims,(X1.debit - IFNULL(X2.claims,0)) as balance
        from (  select sd.student_id,sd.school_id,sd.service_id,sum(sd.amount_debt) as debit,'' as claims,sd.reference_no
        from    PS_Students_Debts sd
        where 1=1
        <if test="schoolId!=0 ">
            and sd.school_id = #{schoolId}
        </if>

        <if test="serviceListId !=null and !serviceListId.isEmpty()">
            <foreach item="item" index="index" collection="serviceListId" open="and sd.service_id in (" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and sd.del_yn='N'
        and sd.debit_date between #{fromDate} and  #{toDate}
        group by sd.student_id,sd.school_id,sd.reference_no
        ) X1
        Left outer join (
        select '' as student_id,bs.school_id,'' as service_id,'' as debit,sum(bs.claims) as claims,bs.reference_no
        from PS_Bank_Statement bs
        where 1=1
        <if test="schoolId!=0 ">
            and bs.school_id = #{schoolId}
        </if>
        and bs.bank_statement_date between #{fromDate} and  #{toDate}
        and bs.del_yn='N'
        and bs.post_payment_yn='Y'
        group by bs.school_id,bs.reference_no
        ) X2
        on X1.reference_no = X2.reference_no and X1.school_id = X2.school_id
        left outer join PS_Students s
        on s.student_id = X1.student_id
        <if test="schoolId!=0 ">
            and s.school_id = #{schoolId}
        </if>
        where  1=1
        <if test="sClass !=0 ">
            AND    s.class= #{sClass}
        </if>
        <if test="grade !=0 ">
            AND   s.grade = #{grade}
        </if>
        <if test="studentId != null and studentId != ''">
            AND    s.student_id= #{studentId}
        </if>
    </select>

    <resultMap id = "resultAllClass" type = "com.studentslips.entities.SchoolAndClass">
        <result property = "studentId" column = "student_id"/>
        <result property = "nameStudent" column = "NAME"/>
        <result property = "debit" column = "debit"/>
        <result property = "claims" column = "claims"/>
        <result property = "balance" column = "balance"/>
<!--        <result property = "isHightColor" column = "isHightColor"/>-->
    </resultMap>
    <resultMap id = "resultDetailClass" type = "com.studentslips.entities.SchoolAndClass">
        <result property = "studentId" column = "student_id"/>
        <result property = "nameStudent" column = "name_student"/>
        <result property = "serviceId" column = "service_id"/>
        <result property = "nameService" column = "name_service"/>
        <result property = "debit" column = "debit"/>
        <result property = "claims" column = "claims"/>
        <result property = "balance" column = "balance"/>
<!--        <result property = "isHightColor" column = "isHightColor"/>-->
    </resultMap>
</mapper>