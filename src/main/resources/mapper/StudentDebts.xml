<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StudentDebtsDao">
    <insert id="insertStudentDebts" parameterType="com.studentslips.entities.StudentsDebts">
        INSERT INTO PS_Students_Debts (student_id,suppliers_id, service_id, school_id, reference_no, quantity, purpose,debit_date, amount_debt,price,grade,class, del_yn, insert_date, insert_id)
        VALUES (#{studentId}, #{suppliersId}, #{serviceId}, #{schoolId},#{referenceNo},#{quantity}, #{purpose}, #{debitDate},#{amountDebt},#{price},#{grade},#{sClass}, 'N', SYSDATE(), #{insertId});
    </insert>

    <update id="updateStudentDebts" parameterType="com.studentslips.entities.StudentsDebts">
        UPDATE PS_Students_Debts SET
        quantity = #{quantity}
        ,amount_debt = #{amountDebt}
        , update_id = #{updateId}
        , update_date = SYSDATE()
        WHERE del_yn = 'N'
        <if test="serviceId!=0 ">
            AND  service_id = #{serviceId}
        </if>
        <if test="schoolId!=0 ">
            AND  school_id = #{schoolId}
        </if>
        <if test="studentId!=0 ">
            AND   student_id = #{studentId}
        </if>
        <if test="debitDate!= null">
            AND  debit_date = #{debitDate}
        </if>
        <if test="grade!=0 ">
            AND   grade = #{grade}
        </if>
        <if test="sClass!=0 ">
            AND   class = #{sClass}
        </if>
    </update>

    <delete id="deleteStudentDebtsById" parameterType="com.studentslips.entities.StudentsDebts">
        UPDATE PS_Students_Debts  SET
            del_yn = 'Y'
                             , update_id = #{updateId}
                             , update_date = SYSDATE()
        WHERE del_yn = 'N'
        <if test="serviceId!=0 ">
            AND  service_id = #{serviceId}
        </if>
        <if test="schoolId!=0 ">
            AND  school_id = #{schoolId}
        </if>
        <if test="suppliersId!=0 ">
            AND   suppliers_id = #{suppliersId}
        </if>
        <if test="debitDate!= null">
            AND   debit_date = #{debitDate}
        </if>
        <if test="grade!=0 ">
            AND   grade = #{grade}
        </if>
        <if test="sClass!=0 ">
            AND   class = #{sClass}
        </if>
    </delete>

    <select id="selectStudentDebts" parameterType="com.studentslips.entities.StudentsDebts" resultMap="result">
        select sd.*,s.name,(select name from PS_Service where id= sd.service_id) as service_name , s.grade, s.class
        from PS_Students_Debts sd, PS_Students s
        where sd.student_id=s.id
        <if test="serviceId!=0 ">
            AND  sd.service_id = #{serviceId}
        </if>
        <if test="schoolId!=0 ">
            AND  sd.school_id = #{schoolId}
        </if>
        <if test="grade!=0 ">
            AND   sd.grade = #{grade}
        </if>
        <if test="sClass!=0 ">
            AND   sd.class = #{sClass}
        </if>
        <if test="suppliersId!=0 ">
            AND   sd.suppliers_id = #{suppliersId}
        </if>
        <if test="studentId!=0 ">
            AND   sd.student_id = #{studentId}
        </if>
        <if test="debitDate!= null">
            AND  sd.debit_date = #{debitDate}
        </if>
    </select>

    <select id="search" parameterType="com.studentslips.entities.StudentsDebts" resultMap="result">
        select s.id as student_id,s.name,concat(concat(s.id , '-' , #{suppliersId}),'-',#{serviceId})  as reference_no, (select name from PS_Service where id= #{serviceId}) as service_name, #{price} as price
        from PS_Students s
        where del_yn='N'
        <if test="schoolId!=0 ">
            AND  s.school_id = #{schoolId}
        </if>
        <if test="grade!=0 ">
            AND   s.grade = #{grade}
        </if>
        <if test="sClass!=0 ">
            AND   s.class = #{sClass}
        </if>
    </select>

    <select id="selectAllStudentDebts" parameterType="com.studentslips.entities.TaskArchiveSearch" resultMap="result">
        select sd.debit_date,sd.grade,sd.class,(select name from onetouch.PS_Service where sd.service_id=id) as service_name,sd.purpose,sd.price
        ,sd.suppliers_id,sd.service_id,sd.school_id
        from onetouch.PS_Students_Debts sd
        where sd.debit_date between #{fromDate} and  #{toDate}
        <if test="schoolId!=0 ">
            AND  sd.school_id = #{schoolId}
        </if>
        group by sd.debit_date,sd.grade,sd.class,sd.service_id,sd.school_id
    </select>
    <select id="selectStudentDebtsCntByReferenceNo" parameterType="com.studentslips.entities.StudentsDebts" resultType="int">
        select count(1)
        from onetouch.PS_Students_Debts sd
        where sd.reference_no = #{referenceNo}
        <if test="schoolId!=0 ">
            AND  sd.school_id = #{schoolId}
        </if>
    </select>

    <resultMap id = "result" type = "com.studentslips.entities.StudentsDebts">
        <result property = "studentId" column = "student_id"/>
        <result property = "suppliersId" column = "suppliers_id"/>
        <result property = "serviceId" column = "service_id"/>
        <result property = "schoolId" column = "school_id"/>
        <result property = "referenceNo" column = "reference_no"/>
        <result property = "quantity" column = "quantity"/>
        <result property = "purpose" column = "purpose"/>
        <result property = "debitDate" column = "debit_date"/>
        <result property = "amountDebt" column = "amount_debt"/>
        <result property = "delYn" column = "del_yn"/>
        <result property = "insertId" column = "insert_id"/>
        <result property = "insertDate" column = "insert_date"/>
        <result property = "updateId" column = "update_id"/>
        <result property = "updateDate" column = "update_date"/>
        <result property = "nameStudent" column = "name"/>
        <result property = "nameService" column = "service_name"/>
        <result property = "price" column = "price"/>
        <result property = "grade" column = "grade"/>
        <result property = "sClass" column = "class"/>
    </resultMap>
</mapper>