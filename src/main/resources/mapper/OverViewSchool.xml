<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OverViewSchoolDao">

    <select id="searchAllSchool" parameterType="com.studentslips.entities.SchoolAndClassSearch" resultMap="resultAllSchool">
        select  concat(XY.grade , '/' , XY.class) as grade_class,
               XY.head_teacher_id,
               XY.name,sum(XX.amount_debt) as debit,
               sum(XX.claims) as claims,sum(XX.balance) as balance,
               XX.service_id,
               (select name from PS_Service svc where svc.service_id = XX.service_id and svc.school_id = #{schoolId}) as name_service
        from (
             select X1.student_id,X1.service_id,X1.amount_debt,X1.claims,(X1.amount_debt - IFNULL(X1.claims,0)) as balance
             from (
                    select sd.student_id,sd.service_id,sd.amount_debt,sum(bs.claims) as claims
                    from PS_Students_Debts sd
                    Left outer join (select * from PS_Bank_Statement  where school_id = #{schoolId} and bank_statement_date between #{fromDate} and  #{toDate}) bs
                    on bs.reference_no = sd.reference_no
                    where 1=1
                    <if test="serviceListId !=null and !serviceListId.isEmpty()">
                        <foreach item="item" index="index" collection="serviceListId" open="and sd.service_id in (" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    and sd.debit_date between #{fromDate} and  #{toDate}
              group by sd.student_id,sd.service_id,sd.amount_debt
          ) X1
        ) XX,
        (select s.student_id,ht.id as head_teacher_id,ht.name,ht.class,ht.grade,ht.school_id from PS_Students s, PS_Head_Teachers ht
        where s.class=ht.class
        and s.grade =ht.grade
        and s.school_id= ht.school_id) XY
        where
            XX.student_id= XY.student_id
        <if test="schoolId!=0 ">
            and XY.school_id = #{schoolId}
        </if>
        <if test="grade!=0 ">
            and XY.grade = #{grade}
        </if>
        group by concat(XY.grade , '/' , XY.class),XY.head_teacher_id,XY.name
    </select>

    <select id="searchDetailSchool" parameterType="com.studentslips.entities.SchoolAndClassSearch" resultMap="resultDetailSchool">
        select  concat(XY.grade , '/' , XY.class) as grade_class,XY.head_teacher_id,XY.name,XX.service_id,(select name from PS_Service where XX.service_id = service_id and school_id = #{schoolId}) as name_service,sum(XX.amount_debt) as debit,sum(XX.claims) as claims,SUM(XX.balance) as balance
        from (
                select X1.student_id,X1.service_id,X1.amount_debt,X1.claims,(X1.amount_debt - IFNULL(X1.claims,0)) as balance
                from (
                      select sd.student_id,sd.service_id,sd.amount_debt,sum(bs.claims) as claims
                      from PS_Students_Debts sd
                      Left outer join (select * from PS_Bank_Statement  where school_id = #{schoolId} and bank_statement_date between #{fromDate} and  #{toDate}) bs
                      on bs.reference_no = sd.reference_no
                      where 1=1
                        <if test="serviceListId !=null and !serviceListId.isEmpty()">
                            <foreach item="item" index="index" collection="serviceListId" open="and sd.service_id in (" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                      and sd.debit_date between #{fromDate} and  #{toDate}
                      group by sd.student_id,sd.service_id,sd.amount_debt
                  ) X1
        ) XX,
        (select s.student_id,ht.id as head_teacher_id,ht.name,ht.class,ht.grade,ht.school_id from PS_Students s, PS_Head_Teachers ht
         where s.class=ht.class
           and s.grade =ht.grade
           and s.school_id= ht.school_id) XY
        where
            XX.student_id= XY.student_id
        <if test="schoolId!=0 ">
            and XY.school_id = #{schoolId}
        </if>
        <if test="grade!=0 ">
            and XY.grade = #{grade}
        </if>
        <if test="headTeacherId!=0 ">
            AND XY.head_teacher_id = #{headTeacherId}
        </if>
        group by concat(XY.grade , '/' , XY.class),XY.head_teacher_id,XY.name,XX.service_id
    </select>

    <resultMap id = "resultAllSchool" type = "com.studentslips.entities.SchoolAndClass">
        <result property = "gradeClass" column = "grade_class"/>
        <result property = "headTeacherId" column = "head_teacher_id"/>
        <result property = "headTeacherName" column = "name"/>
        <result property = "serviceId" column = "service_id"/>
        <result property = "nameService" column = "name_service"/>
        <result property = "debit" column = "debit"/>
        <result property = "claims" column = "claims"/>
        <result property = "balance" column = "balance"/>
<!--        <result property = "isHightColor" column = "isHightColor"/>-->
    </resultMap>
    <resultMap id = "resultDetailSchool" type = "com.studentslips.entities.SchoolAndClass">
        <result property = "gradeClass" column = "grade_class"/>
        <result property = "headTeacherId" column = "head_teacher_id"/>
        <result property = "headTeacherName" column = "name"/>
        <result property = "serviceId" column = "service_id"/>
        <result property = "nameService" column = "name_service"/>
        <result property = "debit" column = "debit"/>
        <result property = "claims" column = "claims"/>
        <result property = "balance" column = "balance"/>
<!--        <result property = "isHightColor" column = "isHightColor"/>-->
    </resultMap>
</mapper>